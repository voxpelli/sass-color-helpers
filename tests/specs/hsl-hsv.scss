@include describe('HSL + HSV conversion') {
  @include it("should expect a color to be converted correctly to HSV") {
    $hsv: ch-hsl-to-hsv(#951);

    @include should(expect($hsv), to(have-length-of(4)));
    @include should(expect(nth($hsv, 1)), to(be-close-to(30deg, 0)));
    @include should(expect(nth($hsv, 2)), to(be-close-to(89%, 0)));
    @include should(expect(nth($hsv, 3)), to(be-close-to(60%, 0)));
  }

  @include it("should expect another color to be converted correctly to HSV") {
    $hsv: ch-hsl-to-hsv(#EFBF5D);

    @include should(expect(nth($hsv, 1)), to(be-close-to(40deg, 0)));
    @include should(expect(nth($hsv, 2)), to(be-close-to(61%, 0)));
    @include should(expect(nth($hsv, 3)), to(be-close-to(94%, 0)));
  }

  @include it("should expect a color to be converted back and forth with no loss") {
    $initialColor: #EFBF5D;
    $hsv: ch-hsl-to-hsv($initialColor);
    $finalColor: ch-hsv-to-color($hsv);

    @include should(expect($finalColor), to(have-type-of(color)));
    @include should(expect($finalColor), to(equal($initialColor)));
  }

  @include it("should expect a color with alpha to be converted back and forth with no loss") {
    $initialColor: rgba(153, 85, 17, .5);
    $hsv: ch-hsl-to-hsv($initialColor);
    $finalColor: ch-hsv-to-color($hsv);

    @include should(expect($finalColor), to(have-type-of(color)));
    @include should(expect($finalColor), to(equal($initialColor)));
  }

  @include it("should expect a hsl list to be converted correctly to HSV") {
    $color: #951;
    $list: hue($color), saturation($color), lightness($color);

    $hsv: ch-hsl-to-hsv($list);

    @include should(expect(nth($hsv, 1)), to(be-close-to(30deg, 0)));
    @include should(expect(nth($hsv, 2)), to(be-close-to(89%, 0)));
    @include should(expect(nth($hsv, 3)), to(be-close-to(60%, 0)));
  }

  @include it("should expect hsl arguments to be converted correctly to HSV") {
    $color: #951;

    $hsv: ch-hsl-to-hsv(hue($color), saturation($color), lightness($color));

    @include should(expect(nth($hsv, 1)), to(be-close-to(30deg, 0)));
    @include should(expect(nth($hsv, 2)), to(be-close-to(89%, 0)));
    @include should(expect(nth($hsv, 3)), to(be-close-to(60%, 0)));
  }

  @include it("should expect brightness to be tweaked correctly") {
    $color: rgba(153, 85, 17, .5);
    $finalColor: ch-brightness($color, 20);

    @include should(expect($finalColor), to(have-type-of(color)));
    @include should(expect($finalColor), to(equal(rgba(204, 113, 23, .5))));
  }

  @include it("should expect brightness to accept list") {
    $list: ch-color-to-hsv(#951);

    $finalColor: ch-brightness($list, 20);

    @include should(expect($finalColor), to(have-type-of(color)));
    @include should(expect($finalColor), to(equal(#CC7117)));
  }

  @include it("should expect brightness to accept arguments") {
    $list: ch-color-to-hsv(#951);

    $finalColor: ch-brightness(nth($list, 1), nth($list, 2), nth($list, 3), 20);

    @include should(expect($finalColor), to(have-type-of(color)));
    @include should(expect($finalColor), to(equal(#CC7117)));
  }
}
