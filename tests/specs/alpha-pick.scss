@use 'sass:math';

@use '../../node_modules/sass-true' as *;
@use '../utils' as *;
@use '../../stylesheets/color-helpers/alpha-pick' as ch;

@include describe('Alpha') {
  @include it('calculates correct color alpha') {
    $actual: ch.calculate-alpha(green, #10b981, #10b981);
    @include assert-equal($actual, 0);

    $actual: ch.calculate-alpha(#10b981, green, #10b981);
    @include assert-equal($actual, 1);

    $actual: ch.calculate-alpha(black, #10dc98, #10b981);
    @include assert-close-to($actual, 0.1034688995, 0.00001);

    $actual: ch.calculate-alpha(white, #03251a, #10b981);
    @include assert-close-to($actual, 0.39342268, 0.00001);

    $actual: ch.calculate-alpha(#20f2ff, green, #10b981);
    @include assert-close-to($actual, 0.50196, 0.00001);

    $actual: ch.calculate-alpha(#eee, red, pink);
    @include assert-close-to($actual, 0.5532212, 0.00001);
  }

  @include it('gets top color from alpha') {
    $actual: ch.calculate-top-color(0.5, green, #10b981);
    @include assert-equal($actual, #20f2ff);

    $actual: ch.calculate-top-color(0.8, red, pink);
    @include assert-equal($actual, #fff0fe);
  }

  @include it('handles edge-cases') {
    $infinity: math.div(1, 0);
    $actual: ch.calculate-alpha(aqua, green, #10b981);
    @include assert-equal($actual, $infinity);

    $actual: ch.calculate-alpha(#fff0fe, red, pink);
    @include assert-equal($actual, NaN, $inspect: true);

    $actual: ch.calculate-alpha(#fff, red, pink);
    @include assert-equal($actual, NaN, $inspect: true);
  }
}
