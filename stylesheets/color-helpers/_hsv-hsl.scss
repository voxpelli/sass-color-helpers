// Ported from http://ariya.blogspot.com/2008/07/converting-between-hsl-and-hsv.html

@use "sass:color";
@use "sass:list";
@use "sass:math";
@use "sass:meta";
@use "math" as ch-math;

@function hsv-to-hsl($h, $s: 0, $v: 0) {
  @if meta.type_of($h) == 'list' {
    $v: list.nth($h, 3);
    $s: list.nth($h, 2);
    $h: list.nth($h, 1);
  }

  @if math.unit($h) == 'deg' {
    $h: 3.1415 * 2 * math.div($h, 360deg);
  }
  @if math.unit($s) == '%' {
    $s: 0 + math.div($s, 100%);
  }
  @if math.unit($v) == '%' {
    $v: 0 + math.div($v, 100%);
  }

  $ss: $s * $v;
  $ll: (2 - $s) * $v;

  @if ($ll == 2 or $ll == 0) {
    $ss: 0;
  } @else if $ll <= 1 {
    $ss: math.div($ss, $ll);
  } @else {
    $ss: math.div($ss, 2 - $ll);
  }

  $ll: $ll * 0.5;

  @return math.div(360deg * $h, 3.1415 * 2), math.percentage(max(0, min(1, $ss))), math.percentage(max(0, min(1, $ll)));
}

@function hsl-to-hsv($h, $ss: 0, $ll: 0) {
  @if meta.type_of($h) == 'list' {
    $ll: list.nth($h, 3);
    $ss: list.nth($h, 2);
    $h: list.nth($h, 1);
  } @else if meta.type_of($h) == 'color' {
    $ll: color.lightness($h);
    $ss: color.saturation($h);
    $h: color.hue($h);
  }

  @if math.unit($h) == 'deg' {
    $h: 3.1415 * 2 * math.div($h, 360deg);
  }
  @if math.unit($ss) == '%' {
    $ss: 0 + math.div($ss, 100%);
  }
  @if math.unit($ll) == '%' {
    $ll: 0 + math.div($ll, 100%);
  }

  $ll: $ll * 2;

  @if $ll <= 1 {
    $ss: $ss * $ll;
  } @else {
    $ss: $ss * (2 - $ll);
  }

  $v: ($ll + $ss) * 0.5;

  $s: 0;
  @if $ll + $ss != 0 {
    $s: math.div(2 * $ss, $ll + $ss);
  }

  @return math.div(360deg * $h, 3.1415 * 2), math.percentage(max(0, min(1, $s))), math.percentage(max(0, min(1, $v)));
}

@function color-to-hsv($color) {
  @return hsl-to-hsv($color);
}

@function hsv-to-color($h, $s: 0, $v: 0) {
  $hsl: hsv-to-hsl($h, $s, $v);
  @return hsl(list.nth($hsl, 1), list.nth($hsl, 2), list.nth($hsl, 3));
}

@function brightness($h, $s: 0, $v: 0, $adjustment: 0) {
  @if meta.type_of($h) == 'color' {
    $h: color-to-hsv($h);
  }
  @if meta.type_of($h) == 'list' {
    $adjustment: $s;
    $v: list.nth($h, 3);
    $s: list.nth($h, 2);
    $h: list.nth($h, 1);
  }

  $v: ch-math.max(0%, ch-math.min(100%, $v + $adjustment));

  @return hsv-to-color($h, $s, $v);
}
